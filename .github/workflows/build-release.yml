name: Build and Release

on:
  - push
  - workflow_dispatch

defaults:
  run:
    shell: bash

jobs:
  # The build job generates the distribution files
  # and uploads the artifacts to the current build
  # pipeline
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 16
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/actions/setup-node
      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm # the action does not cache node_modules

      - name: Install Dependencies
        run: npm install

      - name: Linting
        run: npm run lint

      - name: Run Tests
        run: npm run test

      - name: Distribute
        run: if [ ! -z "$CSC_LINK" ] ; then npm run dist ; else unset CSC_LINK && unset WIN_CSC_LINK && npm run dist --publish=never ; fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.MAC_CERT_P12_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_P12_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.WIN_CERT_P12_BASE64 }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_P12_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

      # Uses a fork of actions/upload-artifact that uploads each file
      # individually instead of bundeling them into a single archive.
      - name: Archive Build Artifacts
        uses: LabhanshAgrawal/upload-artifact@v3
        with:
          path: |
            dist-electron/*.dmg
            dist-electron/*.snap
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.rpm
            dist-electron/*.exe

  # The release job will upload the artifacts
  # to a newly created release draft.
  # As long as the commit has a tag assigned to it.
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    # This should only get run if there is a tag assigned to the commit.
    # The action will not run when one or more of the 'build' jobs has failed.
    # if: startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 10
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3

      - name: Debug List Artifacts
        run: ls | cat
